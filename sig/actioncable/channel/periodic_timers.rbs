module ActionCable
  module Channel
    module PeriodicTimers
      extend ActiveSupport::Concern

      module ClassMethods
        # Periodically performs a task on the channel, like updating an online
        # user counter, polling a backend for new status messages, sending
        # regular "heartbeat" messages, or doing some internal work and giving
        # progress updates.
        #
        # Pass a method name or lambda argument or provide a block to call.
        # Specify the calling period in seconds using the <tt>every:</tt>
        # keyword argument.
        #
        #     periodically :transmit_progress, every: 5.seconds
        #
        #     periodically every: 3.minutes do
        #       transmit action: :update_count, count: current_count
        #     end
        #
        def periodically: (?untyped? callback_or_method_name, every: untyped every) { () -> untyped } -> untyped
      end

      private

      def active_periodic_timers: () -> untyped

      def start_periodic_timers: () -> untyped

      def start_periodic_timer: (untyped callback, every: untyped every) -> untyped

      def stop_periodic_timers: () -> untyped
    end
  end
end
