class TodoList < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[TodoList, ActiveRecord_Relation, Integer]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def id_before_last_save: () -> Integer?
  def id_change_to_be_saved: () -> Array[Integer?]?
  def id_in_database: () -> Integer?
  def saved_change_to_id: () -> Array[Integer?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor plan_id(): Integer
  def plan_id_changed?: () -> bool
  def plan_id_change: () -> [ Integer?, Integer? ]
  def plan_id_will_change!: () -> void
  def plan_id_was: () -> Integer?
  def plan_id_previously_changed?: () -> bool
  def plan_id_previous_change: () -> Array[Integer?]?
  def plan_id_previously_was: () -> Integer?
  def plan_id_before_last_save: () -> Integer?
  def plan_id_change_to_be_saved: () -> Array[Integer?]?
  def plan_id_in_database: () -> Integer?
  def saved_change_to_plan_id: () -> Array[Integer?]?
  def saved_change_to_plan_id?: () -> bool
  def will_save_change_to_plan_id?: () -> bool
  def restore_plan_id!: () -> void
  def clear_plan_id_change: () -> void

  attr_accessor title(): String
  def title_changed?: () -> bool
  def title_change: () -> [ String?, String? ]
  def title_will_change!: () -> void
  def title_was: () -> String?
  def title_previously_changed?: () -> bool
  def title_previous_change: () -> Array[String?]?
  def title_previously_was: () -> String?
  def title_before_last_save: () -> String?
  def title_change_to_be_saved: () -> Array[String?]?
  def title_in_database: () -> String?
  def saved_change_to_title: () -> Array[String?]?
  def saved_change_to_title?: () -> bool
  def will_save_change_to_title?: () -> bool
  def restore_title!: () -> void
  def clear_title_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  def svgs: () -> Svg::ActiveRecord_Associations_CollectionProxy
  def svgs=: (Svg::ActiveRecord_Associations_CollectionProxy | Array[Svg]) -> (Svg::ActiveRecord_Associations_CollectionProxy | Array[Svg])
  def svg_ids: () -> Array[Integer]
  def svg_ids=: (Array[Integer]) -> Array[Integer]
  def todos: () -> Todo::ActiveRecord_Associations_CollectionProxy
  def todos=: (Todo::ActiveRecord_Associations_CollectionProxy | Array[Todo]) -> (Todo::ActiveRecord_Associations_CollectionProxy | Array[Todo])
  def todo_ids: () -> Array[Integer]
  def todo_ids=: (Array[Integer]) -> Array[Integer]

  def plan: () -> Plan
  def plan=: (Plan?) -> Plan?
  def reload_plan: () -> Plan?
  def build_plan: (untyped) -> Plan
  def create_plan: (untyped) -> Plan
  def create_plan!: (untyped) -> Plan

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[TodoList, Integer]
    include Enumerable[TodoList]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[TodoList, Integer]
  end
end
