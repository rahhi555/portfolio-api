class TodoStatus < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[TodoStatus, ActiveRecord_Relation, Integer]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def id_before_last_save: () -> Integer?
  def id_change_to_be_saved: () -> Array[Integer?]?
  def id_in_database: () -> Integer?
  def saved_change_to_id: () -> Array[Integer?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor svg_id(): Integer
  def svg_id_changed?: () -> bool
  def svg_id_change: () -> [ Integer?, Integer? ]
  def svg_id_will_change!: () -> void
  def svg_id_was: () -> Integer?
  def svg_id_previously_changed?: () -> bool
  def svg_id_previous_change: () -> Array[Integer?]?
  def svg_id_previously_was: () -> Integer?
  def svg_id_before_last_save: () -> Integer?
  def svg_id_change_to_be_saved: () -> Array[Integer?]?
  def svg_id_in_database: () -> Integer?
  def saved_change_to_svg_id: () -> Array[Integer?]?
  def saved_change_to_svg_id?: () -> bool
  def will_save_change_to_svg_id?: () -> bool
  def restore_svg_id!: () -> void
  def clear_svg_id_change: () -> void

  attr_accessor todo_id(): Integer
  def todo_id_changed?: () -> bool
  def todo_id_change: () -> [ Integer?, Integer? ]
  def todo_id_will_change!: () -> void
  def todo_id_was: () -> Integer?
  def todo_id_previously_changed?: () -> bool
  def todo_id_previous_change: () -> Array[Integer?]?
  def todo_id_previously_was: () -> Integer?
  def todo_id_before_last_save: () -> Integer?
  def todo_id_change_to_be_saved: () -> Array[Integer?]?
  def todo_id_in_database: () -> Integer?
  def saved_change_to_todo_id: () -> Array[Integer?]?
  def saved_change_to_todo_id?: () -> bool
  def will_save_change_to_todo_id?: () -> bool
  def restore_todo_id!: () -> void
  def clear_todo_id_change: () -> void

  attr_accessor status(): String
  def status_changed?: () -> bool
  def status_change: () -> [ String?, String? ]
  def status_will_change!: () -> void
  def status_was: () -> String?
  def status_previously_changed?: () -> bool
  def status_previous_change: () -> Array[String?]?
  def status_previously_was: () -> String?
  def status_before_last_save: () -> String?
  def status_change_to_be_saved: () -> Array[String?]?
  def status_in_database: () -> String?
  def saved_change_to_status: () -> Array[String?]?
  def saved_change_to_status?: () -> bool
  def will_save_change_to_status?: () -> bool
  def restore_status!: () -> void
  def clear_status_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  def svg: () -> Svg
  def svg=: (Svg?) -> Svg?
  def reload_svg: () -> Svg?
  def build_svg: (untyped) -> Svg
  def create_svg: (untyped) -> Svg
  def create_svg!: (untyped) -> Svg
  def todo: () -> Todo
  def todo=: (Todo?) -> Todo?
  def reload_todo: () -> Todo?
  def build_todo: (untyped) -> Todo
  def create_todo: (untyped) -> Todo
  def create_todo!: (untyped) -> Todo

  def todo!: () -> bool
  def todo?: () -> bool
  def doing!: () -> bool
  def doing?: () -> bool
  def done!: () -> bool
  def done?: () -> bool
  def self.todo: () -> ActiveRecord_Relation
  def self.doing: () -> ActiveRecord_Relation
  def self.done: () -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def todo: () -> ActiveRecord_Relation

    def doing: () -> ActiveRecord_Relation

    def done: () -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[TodoStatus, Integer]
    include Enumerable[TodoStatus]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[TodoStatus, Integer]
  end
end
