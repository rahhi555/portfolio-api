exit
Rails.application.credentials.db[:password]
Rails.application.credentials.db[:host]
exit
user
a
ls
exit
ap
ap User
exit
User.name_changed?
User.first.name_changed?
exit
redis = Redis.new
redis.set('lisa','auth sign')
redis = Redis.new(host: '172.17.0.2')
redis.set('lisa','auth sign')
redis = Redis.new(url: 'redis://localhost:6379/0')
redis.set('lisa','auth sign')
redis = Redis.new(host: '172.17.0.3')
redis.set('lisa','auth sign')
redis = Redis.new(host: '172.17.0.1')
redis.set('lisa','auth sign')
redis.get 'lisa'
redis
redis = Redis.new
exit
redis
redis = Redis.new(host: redis)
redis = Redis.new(host: 'redis')
redis = Redis.new()
redis.set('a','aa')
redis.set('a','aa')
redis.set('a','aa')
redis = Redis.new(host: 'redis')
redis.set('a','aa')
redis.get('a')
redis2 = Redis.new(host: '172.18.0.5')
redis2.set('ab','aa')
exit
FirebaseIdToken::Cretificates.present?
FirebaseIdToken::Certificates.present?
FirebaseIdToken::Certificates.request
FirebaseIdToken::Certificates.present?
exit
FirebaseIdToken::Certificates.ttl
exit
FirebaseIdToken::Certificates.present?\
=> true
FirebaseIdToken::Certificates.present?
exit
User.all
User.delete_all
User.all
exit
User.all
exit
Rails.application.credentials.db[:password]
Rails.application.credentials.db[:host]
exit
User.all
User.delete_all
User.all
User.all
User.all
User.all
User.all
User.all
exit
exit
User.all
exit
FirebaseIdToken::Certificates.present?
FirebaseIdToken::Certificates.request!
exit
exit
redis = Redis.new(host: 'redis',db: 15)
redis.get('firebase_id_token:certificates')
exit
User.all
exit
User.all
User.delete_all
exit
current_user
exit
User.al
User.all
User.all
User.delete_all
User.all
exit
User.all
User.delete_all
exit
User.all
User.all
exit
User.all
User.delete_all
User.all
User.all
exit
User.all
User.delete_all
exit
User.all
User.delete_all
exit
User.all
User.all
User.all
exit
User.delete_all
exit
User.all
User.delete_all
exit
User.all
User.all
exit
User.all
exit
User.all
exit
User.all
User.all
exit
User.all
User.delete_all
User.all
User.delete_all
exit
User.delete_all
exit
User.delete_all
exit
User.all
User.delete_all
exit
User.all
exit
User.all
Plan.all
Plan.joins(:user).select(:id, :name, :created_at, :updated_at, 'users.name as author')
test = Plan.joins(:user).select(:id, :name, :created_at, :updated_at, 'users.name as author')
test.inspect
test.attributes
test.attribute
test[0]
test[0].attributes
test = Plan.joins(:user).select(:id, :name, 'users.name as author, plans.created_at as createdAt, plans.updated_at as updatedAt')
test[0].attributes
"TestCase".underscore
exit
Plan.all
exit
Plan.delete_all
exit
FirebaseIdToken
FirebaseIdToken::Signatur
FirebaseIdToken::Signature
FirebaseIdToken::Signature::VERSION
FirebaseIdToken::VERSION
exit
User.all
User.delete_all
exit
User.all
params = { uid: SecureRandom.uuid, name: 'test', provider: 'anonymous' }
User.create!(params)
User.all
User.last.provider
User.last.password?
User.last.state_before_type_cast
User.last.provider_before_type_cast
params = { uid: SecureRandom.uuid, name: 'test2', provider: 'password' }
User.create!(params)
User.all
params = { uid: SecureRandom.uuid, name: 'test', provider: 'anonymoussss' }
User.create!(params)
User.create(params)
params = { uid: SecureRandom.uuid, name: 'test', provider: 'google.com' }
User.create(params)
User.all
User.last.provider_before_type_cast
User.last.provider
exit
'google.com'.underscore
'google.com'.snackcase
'google.com'.snack
'google.com'.sneakcase
'google.com'.snakecase
'google.com'.underscore
Plan.all
exit
User.all
User.create(name: 'test', uid: SecureRandom.uuid, provider: 'google.com')
use = User.last
user.google.com?
user.google_com?
user.password
user.password?
user.anonymous?
user
use
user = use
user.google_com?
user.google.com?
user.password?
user.anonymous?
user.methods
user.google.com?
user.google.com!
user.'google.com!'
exit
'password'.split('.')
'password.com'.split('.')
'password.com'.split('.')[0]
'password.com'.split('.com')[0]
'password.com'.split('.com')
'password.com'.slice(/.*\com/)
'password.com'.slice(/.*\.com$/)
'password.com'.slice(/.*[^\.com]$/)
'password.com'.slice(/.*[\.com]$/)
'password.com'.slice(/.*[^com]$/)
'password.com'.slice(/.*[^com]/)
'password.com'.slice(/.*[^\.com]/)
exit
User.all
User.delete_all
exit
User.destroy_all
Plan.all
exit
pran = Plan.first
plan.user?
plan = Plan.first
plan.user?
plan.user
plan.user.nil?
exit
User.all
exit
User.all
User.last.destroy
exit
User.all
exit
User.all
exit
user = User.first
Plan.create(user: user, name: '')
Plan.create!(user: user, name: '')
exit
Plan.all
exit
User.first.plans
User.first.plans(10)
User.first.plans.find(10)
exit
user = User.find_by(uid: "FGt6Dj5B2BZgbTF9khqlSuAoSi7P")
exit
Plan.all
Plan.first.published
Plan.first.published?
exit
Plan.all
exit
Plan.all
plan = Plan.create!(name: 'ggggggggggggggggggg', published: true, user: User.first)
User.all
Plan.all
Plan.all
exit
Plan.all
Plan.all
Plan.all
exit
plan = Plan.first
plan.created_at
Time.zone.now
Time.zone.default
Time.zone_default

plan.created_at.strftime('%Y年%m月%d日 %H:%M:%S')
plan.created_at
exit
Plan.first.strf_created_at
User.first.strf_created_at
exit
User.first.strf_updated_at
exit
User.all
User.first.plans
user = User.first
ids = user.plans.ids
ids
user.destroy
ids
user
User.all
Plan.all
exit
